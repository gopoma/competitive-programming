//* sometimes pragmas don't work, if so, just comment it!
#pragma GCC optimize ("Ofast")
//? #pragma GCC target ("avx,avx2")
//! #pragma GCC optimize ("trapv")

#undef _GLIBCXX_DEBUG //? for Stress Testing

#include <bits/stdc++.h>

#include<stdio.h>
#include<string.h>
#include<string>
#include<cstdlib>
#include<type_traits>
#include<cstdint>
#include<array>

using namespace std;

//* Debugger
string to_string(string s) {
    return '"' + s + '"';
}

string to_string(const char* s) {
    return to_string((string) s);
}

string to_string(char c) {
    return string(1, c);
}

string to_string(bool b) {
    return (b ? "true" : "false");
}

template <typename A>
string to_string(A v);

string to_string(vector<bool> v) {
    bool first = true;
    string res = "[";
    for (auto x : v) {
        if (!first) {
            res += ", ";
        }
        first = false;
        res += x ? "true" : "false";
    }
    res += "]";
    return res;
}

template <typename A, typename B>
string to_string(pair<A, B> p) {
    return "(" + to_string(p.first) + ", " + to_string(p.second) + ")";
}


template <typename A>
string to_string(A v) {
    bool first = true;
    string res = "[";
    for (const auto &x : v) {
        if (!first) {
            res += ", ";
        }
        first = false;
        res += to_string(x);
    }
    res += "]";
    return res;
}

void debug_out() { cerr << endl; }

template <typename Head, typename... Tail>
void debug_out(Head H, Tail... T) {
  cerr << " " << to_string(H);
  debug_out(T...);
}

#ifdef LOCAL
#define MACRO(code) do {code} while (false)
#define dbg(x)      {auto xd = x; cout << "Line(" << __LINE__ << "): " << "\033[1;34m" << #x << "\033[0;32m = \033[35m" << to_string(xd) << "\033[0m" << endl;}
#define dbg(...)    MACRO(cout << "Line(" << __LINE__ << "): " << "\033[1;34m" << "[" << #__VA_ARGS__ << "]\033[35m:"; debug_out(__VA_ARGS__); cout << "\033[0m";)

#define GA          dbg(0)
#define RAYA        cout << "\033[101m" << "================================" << "\033[0m" << endl;
#else
#define dbg(x)
#define dbg(...)
#define GA
#define RAYA
#endif
//* /Debugger

using ll = long long;
using db = long double; // or double if tight TL
using str = string;

using pi = pair<int,int>;
using pl = pair<ll, ll>;
#define mp make_pair
#define f first
#define s second

#define tcT template<class T
tcT> using V = vector<T>;
tcT, size_t SZ> using AR = array<T,SZ>;
using vi = V<int>;
using vl = V<ll>;
using vb = V<bool>;
using vpi = V<pi>;

#define sz(x) int((x).size())
#define all(x) begin(x), end(x)
#define sor(x) sort(all(x))
#define rsz resize
#define pb push_back
#define ft front()
#define bk back()

#define FOR(i,a,b) for (int i = (a); i < (b); ++i)
#define F0R(i,a) FOR(i,0,a)
#define ROF(i,a,b) for (int i = (b)-1; i >= (a); --i)
#define R0F(i,a) ROF(i,0,a)
#define rep(a) F0R(_,a)
#define each(a,x) for (auto& a: x)

const int MOD = 1e9+7;
const db PI = acos((db)-1);
mt19937 rng(0); // or mt19937_64
//* mt19937 rng((uint32_t)chrono::steady_clock::now().time_since_epoch().count());

tcT> bool ckmin(T& a, const T& b) {
	return b < a ? a = b, 1 : 0; } // set a = min(a,b)
tcT> bool ckmax(T& a, const T& b) {
	return a < b ? a = b, 1 : 0; } // set a = max(a,b)

void setIn(string s) { freopen(s.c_str(), "r", stdin); }

const auto beg_time = std::chrono::high_resolution_clock::now();
// https://stackoverflow.com/questions/47980498/accurate-c-c-clock-on-a-multi-core-processor-with-auto-overclock?noredirect=1&lq=1
double time_elapsed() {
	return chrono::duration<double>(std::chrono::high_resolution_clock::now() -
	                                beg_time)
	    .count();
}

//* Template

namespace base64_decode_impl{
constexpr int ctoi(char c){
  if('A'<=c&&c<='Z')return c-'A';
  else if('a'<=c&&c<='z')return c-'a'+26;
  else if('0'<=c&&c<='9')return c-'0'+52;
  else if(c=='+')return 62;
  else if(c=='/')return 63;
  else return -1;
}
template<int N>
constexpr std::array<bool,N>bin_decode(const char*c){
  std::array<bool,N>res;
  for(int i=0,j=0;i<N;i+=6,j++){
    int now=ctoi(c[j]);
    for(int k=0;k<6;k++)if(i+k<N)res[i+k]=now>>k&1;
  }
  return res;
}
template<typename T,int N,int bit_width>
constexpr std::array<T,N>base64_decode(const char*c){
  static_assert(std::is_integral_v<T>);
  std::array<T,N>res;
  std::array<bool,N*bit_width>bin=bin_decode<N*bit_width>(c);
  for(int i=0;i<N;i++){
    res[i]=0;
    for(int j=0;j<bit_width;j++){
      if(bin[i*bit_width+j]){
        res[i]|=T(1)<<j;
      }
    }
  }
  return res;
}
}
using base64_decode_impl::base64_decode;

//
#include<limits>
#include<concepts>
template<typename T>
constexpr std::enable_if_t<std::numeric_limits<T>::digits<=32,int>msb(T n){return n==0?-1:31-__builtin_clz(n);}
template<typename T>
constexpr std::enable_if_t<(std::numeric_limits<T>::digits>32),int>msb(T n){return n==0?-1:63-__builtin_clzll(n);}

template<typename T>
constexpr std::enable_if_t<std::numeric_limits<T>::digits<=32,int>lsb(T n){return n==0?-1:__builtin_ctz(n);}
template<typename T>
constexpr std::enable_if_t<(std::numeric_limits<T>::digits>32),int>lsb(T n){return n==0?-1:__builtin_ctzll(n);}

template<typename T>
constexpr std::enable_if_t<std::is_integral_v<T>,T>floor_pow2(T n){return n==0?0:T(1)<<msb(n);}

template<typename T>
constexpr std::enable_if_t<std::is_integral_v<T>,T>ceil_pow2(T n){return n<=1?1:T(1)<<(msb(n-1)+1);}

//

namespace isprime_impl{
using u16=uint16_t;
using u32=uint32_t;
using u64=uint64_t;
using u128=__uint128_t;
const std::array<u16,16384>base_table1=base64_decode<u16,16384,16>("");
constexpr u16 base_table2[8]={15,135,13,60,15,117,65,29};
constexpr u64 reduce(u128 v,u64 r,u64 mod){
  return (v+u128(u64(v)*-r)*mod)>>64;
}
constexpr bool isprime(unsigned long long n){
  if(n<64)return 2891462833508853932ll>>n&1;
  if(n%2==0)return false;
  int k=lsb(n-1);
  u64 d=(n-1)>>k;
  u64 r=n;
  for(int i=0;i<5;i++)r*=2-n*r;
  u64 r2=-u128(n)%n;
  u64 p1=reduce(r2,r,n),m1=reduce(u128(n-1)*r2,r,n);
  if(p1>=n)p1-=n;
  if(m1>=n)m1-=n;
  u64 base1=2,base2=7,base3=61;
  if(n>=u64(1)<<32){
    base2=base_table1[u32(n*0xAD625B89)>>18];
    base3=base_table2[base2>>13];
  }
  base1=reduce(u128(base1)*r2,r,n);
  base2=reduce(u128(base2)*r2,r,n);
  base3=reduce(u128(base3)*r2,r,n);
  u64 x1=p1,x2=p1,x3=p1;
  while(d>0){
    if(d&1){
      x1=reduce(u128(x1)*base1,r,n);
      x2=reduce(u128(x2)*base2,r,n);
      x3=reduce(u128(x3)*base3,r,n);
    }
    base1=reduce(u128(base1)*base1,r,n);
    base2=reduce(u128(base2)*base2,r,n);
    base3=reduce(u128(base3)*base3,r,n);
    d>>=1;
  }
  if(x1>=n)x1-=n;
  if(x2>=n)x2-=n;
  if(x3>=n)x3-=n;
  bool f1=x1==p1||x1==m1;
  bool f2=x2==p1||x2==m1;
  bool f3=x3==p1||x3==m1;
  while(--k){
    x1=reduce(u128(x1)*x1,r,n);
    x2=reduce(u128(x2)*x2,r,n);
    x3=reduce(u128(x3)*x3,r,n);
    if(x1>=n)x1-=n;
    if(x2>=n)x2-=n;
    if(x3>=n)x3-=n;
    f1|=x1==m1;
    f2|=x2==m1;
    f3|=x3==m1;
  }
  return f1&&f2&&f3;
}
}
using isprime_impl::isprime;
//* /Template

/**
 * Description: Tests primality up to $SZ$. Runs faster if only
 	* odd indices are stored.
 * Time: O(SZ\log\log SZ) or O(SZ)
 * Source: KACTL
 * Verification: https://open.kattis.com/problems/primesieve
 */

template<int SZ> struct Sieve {
	bitset<SZ> is_prime; vi primes;
	Sieve() {
		is_prime.set(); is_prime[0] = is_prime[1] = 0;
		for (int i = 4; i < SZ; i += 2) is_prime[i] = 0;
		for (int i = 3; i*i < SZ; i += 2) if (is_prime[i])
			for (int j = i*i; j < SZ; j += i*2) is_prime[j] = 0;
		F0R(i,SZ) if (is_prime[i]) primes.pb(i);
	}
	// int sp[SZ]{}; // smallest prime that divides
	// Sieve() { // above is faster
	// 	FOR(i,2,SZ) {
	// 		if (sp[i] == 0) sp[i] = i, primes.pb(i);
	// 		for (int p: primes) {
	// 			if (p > sp[i] || i*p >= SZ) break;
	// 			sp[i*p] = p;
	// 		}
	// 	}
	// }
};

Sieve<int(1e7) + 1> st;

void solve() {
    ll L, R; cin >> L >> R;

    ll res = 0;
    bool L_already = false;
    for(auto& x: st.primes) {
        ll current = ll(x) * ll(x);
        while(current <= R) {
            L_already |= (L == current);
            res += (L <= current);
            //* if(L <= current) dbg(current);
            current *= x;
        }
    }

    for(ll x = L; x <= R; x++) {
        if(x == L) {
            if(isprime(x)) {
                L_already = true;
            }
        }
        if(isprime(x)) {
            //* dbg(x);
            res++;
        }
    }
    dbg(res, L_already);
    res += !L_already;
    cout << res << "\n";
}

int main() {
    cin.tie(0)->sync_with_stdio(0);

    int t = 1; //* cin >> t;
    while(t--) {
        RAYA;
        RAYA;
        RAYA;
        solve();
    }

    #ifdef LOCAL
        cerr << fixed << setprecision(5);
        cerr << "\033[42m++++++++++++++++++++\033[0m\n";
        cerr << "\033[42mtime = " << time_elapsed() << "ms\033[0m\n";
        cerr << "\033[42m++++++++++++++++++++\033[0m";
    #endif
}
